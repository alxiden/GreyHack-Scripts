metaxploit = include_lib("/lib/metaxploit.so")
cryptools = include_lib("/lib/crypto.so")

address = params[0]
exp = params[2]
key = params[3]

if params.len == 5 then //looks to see if a password is provided
	password = params[4] 
else
	password = null
end if

if params[1] == "router" then
	net_session = metaxploit.net_use(address)
else
	port = params[1].to_int
	net_session = metaxploit.net_use(address, port)
end if

if not net_session then exit("No Connection")

metaLib = net_session.dump_lib
//print("----Session Connected----")

if password == null then //if not a password reset, preforms buffer overflow
	//print("----Performing Exsploit -----")
	result = metaLib.overflow(exp, key)
	if result then
		//print(typeof(result))
	end if
else //Preforms password reset
	result = metaLib.overflow(exp, key, password)
	if result then
		//print(typeof(result)) //Prints password
		end if
end if

print(result)

type = typeof(result) //shows type of access gained

if type == "shell" then result.start_terminal //Opens a shell terminal

if type == "computer" then
	password_file = result.File("/etc/passwd") //collects passwords
	home_folder = result.File("/home")
	if home_folder then 
		user_folders = home_folder.get_folders
		for folder in user_folders
			bank_file = result.File("/home/"+folder.name+"/Config/Bank.txt")
			Mail_file = result.File("/home/"+folder.name+"/Config/Mail.txt")
			if bank_file.has_permission("r") then print("Bank "+ folder.name + ": " + bank_file.get_content) 
		
			if Mail_file.has_permission("r") then print("Mail " + folder.name + ": "+ Mail_file.get_content) 
		
		end for
	end if
	password_file = result.File("/etc/passwd")
	if password_file.has_permission("r") then
		listusers = password_file.get_content.split("\n")
		for line in listusers
			password = line.split(":")
			textpass = cryptools.decipher(password[1])
			print(password[0] + "=>" + textpass)		
		end for	
	else
		print("Permissions Error")
	end if
	if not password_file then exit("No Password File")
	end if
